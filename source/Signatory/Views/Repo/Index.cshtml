@model RepoViewModel

@{
    ViewBag.Title = @Model.User.Username + "/" + @Model.Repository.Name;
}

<div class="row">
    <div class="span3">
        <ul class="thumbnails">
            <li>
                <div>
                    <img src="//www.gravatar.com/avatar/@Model.User.GravatarId?s=200"/>
                    <hr />
                    <h3>Collaborators</h3>

                    @foreach(var collaborator in Model.Collaborators){
                        <i class="icon-user"></i> @collaborator.Username<br/>
                    }
                </div>
            </li>
        </ul>
    </div>
    <div class="span9">
        <div class="page-header">
            <div class="btn-group  pull-right">
                @if (Model.RequireCla) 
                {
                    <a href="/@Model.User.Username/@Model.Repository.Name/sign" class="btn"><i class="icon-pencil"></i> Sign</a>
                }
                @if (Model.Signers.Any())
                {
                    <a href="/@Model.User.Username/@Model.Repository.Name/export" class="btn"><i class="icon-cloud-download"></i> Export</a>
                }
                @if (Model.CurrentUserIsCollaborator) 
                { 
                    <a href="/@Model.User.Username/@Model.Repository.Name/settings" class="btn"><i class="icon-cog"></i> Settings</a>
                }
            </div>
            <h2 style="margin-bottom: -5px;">@Model.Repository.Name CLA Signers</h2>
            <small class="muted">
                @Model.Signers.Count() CLA signers as of @DateTime.Now.ToShortTimeString()
            </small>
        </div>
        
        @{
            var settings = TempData["settingsChanged"] as SettingsChangedNotification;
            var userSigned = TempData["userSigned"] as UserSignedNotification;
        }
        @if (settings != null)
        {
            <div class="alert alert-@settings.Status">
                @*TODO: Add close button*@
                <p>
                    <strong>@settings.RepoOwner/@settings.RepoName</strong> has been updated,
                    @if (settings.RequireCla)
                    {
                        <text>a contributor license agreement is required.</text>
                    }
                    else
                    {
                        <text>a contributor license agreement is not required.</text>
                    }
                </p>
            </div>
        }
        
        @if (userSigned != null){
            <div class="alert alert-@userSigned.Status">
                @*TODO: Add close button*@
                <p>
                    <strong>@userSigned.Username</strong> has successfully signed the contributor license agreement for <strong>@Model.User.Username/@Model.Repository.Name</strong>.
                </p>
            </div>
        }
        
        @if (Model.RequireCla)
        {
            if (Model.Signers.Any())
            {
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Name</th>
                            <th>Date Signed</th>
                        </tr>
                    </thead>
                    <tbody style="cursor: pointer;">
                        @foreach (var signer in Model.Signers)
                        {
                            <tr>
                                <td>@signer.Username</td>
                                <td>@signer.FullName</td>
                                <td>@signer.DateSigned.ToShortDateString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>Trailblazer!</h4>
                    <p>
                        You can be the first to sign the CLA for <strong>@Model.User.Username/@Model.Repository.Name</strong> by clicking on the <a href="/@Model.User.Username/@Model.Repository.Name/sign">sign</a> button.
                    </p>
                    <p class="text-right"><a href="/@Model.User.Username/@Model.Repository.Name/sign" class="btn"><i class="icon-pencil"></i> Sign</a></p>
                </div>
            }
        }
        else
        {
            if (Model.CurrentUserIsCollaborator)
            {
                <div class="alert alert-block">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>Configuration Required</h4>
                    <p>
                        In order to use Signatory.io with <strong>@Model.User.Username/@Model.Repository.Name</strong>, you must configure it by clicking the <a href="/@Model.User.Username/@Model.Repository.Name/settings">settings</a> button.
                    </p>
                    <p class="text-right"><a href="/@Model.User.Username/@Model.Repository.Name/settings" class="btn"><i class="icon-cog"></i> Settings</a></p>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>Nothing To See Here...</h4>
                    <p>
                        As of right now, <strong>@Model.User.Username/@Model.Repository.Name</strong> does not require a CLA. 
                    </p>
                    @if (!string.IsNullOrEmpty(Model.User.EmailAddress))
                    {
                        <p>
                            You can email @Model.User.Name and request for CLA's to be managed by Signatory.io
                        </p>
                        <p class="text-right"><a href="mailto:@Model.User.EmailAddress?subject=Please use Signatory.io with @Model.User.Username/@Model.Repository.Name" class="btn"><i class="icon-envelope"></i> Email</a></p>
                    }
                </div>
            }
        }
    </div>
</div>