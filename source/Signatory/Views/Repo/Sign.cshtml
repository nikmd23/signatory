@model SignViewModel

@{
    ViewBag.Title = string.Format("Sign CLA for {0}/{1}", Model.Username, Model.Repo);
}

<form method="post" id="cla">
    <div class="row">
        <div class="span12">
            <fieldset>
                <legend>
                    <span class="muted">@Model.Username/@Model.Repo</span><br />
                    Contributor License Agreement:
                </legend>
        
                @Html.RenderMarkdownFile("~/Content/apache-cla.md", Model.Repo)
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="span12">
            <fieldset>
                <legend>Personal Details:</legend>

                @if (!ViewContext.ViewData.ModelState.IsValid) { 
                    <div class="row">
                        <div class="span12">
                            @Html.ValidationSummary(true, "Rhut Rhow! Looks like we had a little problem with the form.")
                        </div>
                    </div>
                }

                    <div class="row">
                        <div class="span4">

                            <div class="control-group">
                                @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.FullName)
                                    @Html.ValidationMessageFor(m => m.FullName, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(m => m.Email)
                                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(m => m.TelephoneNumber, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(m => m.TelephoneNumber)
                                    @Html.ValidationMessageFor(m => m.TelephoneNumber, null, new { @class = "help-inline" })
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextAreaFor(m => m.Address, new { rows = 3, style = "resize: vertical;" })
                                    @Html.ValidationMessageFor(m => m.Address, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(m => m.Country, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(m => m.Country)
                                    @Html.ValidationMessageFor(m => m.Country, null, new { @class = "help-inline" })
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                <label for="Username" class="control-label">Signature</label>
                                <div class="controls">
                                    <div class="signature uneditable-input"></div>
                                    <span class="help-block">Sign with your mouse or finger (on a touch device).</span>
                                    @Html.HiddenFor(m => m.Signature)
                                    @Html.ValidationMessageFor(m => m.Signature, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <button type="submit" class="btn btn btn-success">Submit</button>
                        </div>
                    </div>
            </fieldset>
        </div>
    </div>
</form>

@section scripts{
@Scripts.Render("~/jSignature")
<script>
    $(document).ready(function () {
        $('.validation-summary-errors').addClass('alert alert-error');
        $('.input-validation-error').parents('.control-group').addClass('error');

        $('.signature').jSignature();

        var sigString = $('#Signature').val();
        if (sigString !== '["image/jsignature;base30",""]' && sigString !== '') {
            var sig = JSON.parse(sigString);
            $('.signature').jSignature('setData', 'data:' + sig.join(','));
        }

        $('#cla').submit(function () {
            var sig = $('.signature').jSignature('getData', 'base30');
            $('#Signature').val(JSON.stringify(sig));
        });
	})
</script>
}